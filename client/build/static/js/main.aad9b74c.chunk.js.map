{"version":3,"sources":["utils/actions.js","store/actions/types.js","assets/vscode.png","components/RoomComponents/index.js","components/Editor/index.js","utils/utils.js","utils/socketio-client.js","api/index.js","components/Code/index.js","store/actions/codeActions.js","components/Whiteboard/index.js","components/Meet/index.js","components/Chat/index.js","components/Users.js","components/RoomWorkArea.js","components/RoomLayout.js","store/actions/rtcActions.js","components/Join/index.js","components/App/index.js","store/reducers/codeReducer.js","store/reducers/rtcReducer.js","store/reducers/chatReducers.js","store/reducers/index.js","store/store.js","index.js"],"names":["module","exports","JOIN","JOINED","DISCONNECTED","CODE_CHANGE","LANGUAGE_CHANGE","UPDATE_LANGUAGE","INPUT_CHANGE","UPDATE_INPUT","LEAVE","SEND_MESSAGE","RECEIVE_MESSAGE","OUTPUT_CHANGE","ROOM_MEMBERS","UPDATE_CODE","UPDATE_STDIN","REQUEST_EXECUTION","UPDATE_RUN","CODE_HISTORY_LOADING","FETCH_CODE_HISTORY","CODE_SET_CLIENTS","CODE_REMOVE_CLIENT","GET_RTC_TOKEN_LOADING","GET_RTC_TOKEN","START_RTC","TOGGLE_MIC","TOGGLE_CAMERA","ADD_USER","REMOVE_USER","ADD_NEW_MESSAGE","UPDATE_ROOM_USERS","COMPOSE_MESSAGE","FETCH_CHAT_HISTORY","CHAT_HISTORY_LOADING","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","Typography","closedMixin","theme","transition","transitions","create","easing","sharp","duration","leavingScreen","overflowX","width","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","padding","mixins","toolbar","ChatDrawerHeader","zIndex","Toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","drawer","MiniDrawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","Main","flexGrow","marginRight","drawerWidth","easeOut","enteringScreen","CenterLoadingSpinner","Grid","container","direction","style","minHeight","item","xs","CircularProgress","CodeAppBar","position","class","src","codeLogo","alt","variant","noWrap","component","sm","LeftDrawer","tracks","chatDrawerOpen","chatDrawerTab","setTabValue","setChatDrawerTab","setChatDrawerOpen","dispatch","useDispatch","trackState","useSelector","state","RTC","users","CHAT","mute","type","setEnabled","audio","video","List","ListItem","onClick","disablePadding","ListItemButton","px","ListItemIcon","minWidth","mr","Gesture","Videocam","Chat","Badge","badgeContent","length","color","People","Stack","bottom","overflow","Mic","Switch","checked","onChange","name","Editor","socketRef","IDE","roomId","code","options","mode","language","getThemeForLanguage","keyMap","showHint","autoCloseTags","autoCloseBrackets","lineNumbers","lineWrapping","indentWithTabs","onBeforeChange","editor","data","console","log","origin","includes","payload","current","emit","ACTIONS","getBaseURL","process","REACT_APP_API_URL","backendUrl","initSocket","reconnectionAttempt","timeout","transports","socketIOClient","url","instance","axios","baseURL","Code","handleCodeExecutionRequest","e","stdin","res","post","toast","error","message","POSITION","BOTTOM_LEFT","textAreaStyle","background","border","borderRadius","boxShadow","outline","Paper","height","className","sizes","FormControl","InputLabel","Select","labelId","label","event","target","MenuItem","gutterBottom","TextareaAutosize","minRows","maxRows","input","handleStdInChange","info","BOTTOM_RIGHT","autoClose","readOnly","run","stderr","signal","stdout","Fab","disabled","is_executing","margin","top","right","left","Cached","PlayArrow","Whiteboard","canvasRef","paths","setPaths","uid","useState","strokeColor","setStrokeColor","strokeSize","setStrokeSize","strokeMode","setStrokeMode","canvasColor","allowOnlyPointerType","canvasProps","stroke","isEraser","setLastStroke","useEffect","drawingId","eraseMode","defaultValue","ref","updatedPaths","msg","onStroke","strokeWidth","eraserWidth","ToggleButtonGroup","exclusive","newMode","ToggleButton","Edit","AutoFixNormal","Tooltip","title","IconButton","Brush","Slider","size","min","max","valueLabelDisplay","clearCanvas","clearHandler","ClearAll","colors","hex","Meet","start","videoTrack","map","user","sendMessage","username","messages","messageContent","text","TextField","fullWidth","onKeyPress","key","placeholder","Users","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","stringToColor","string","i","hash","charCodeAt","toString","slice","bgcolor","ListItemAvatar","Avatar","ListItemText","pt","primary","secondary","RoomWorkArea","tabValue","useTheme","Drawer","visibility","anchor","ChevronLeft","ChevronRight","Tabs","newValue","Tab","Divider","RoomLayout","useClient","useMicrophoneAndCameraTracks","React","setOpen","setValue","useRef","appId","rtcToken","channelName","client","ready","init","on","mediaType","subscribe","audioTrack","play","stop","join","publish","handleErrors","err","usersList","room","clients","socketId","updatedPath","newPath","loadPaths","drawing","updatedControl","undo","redo","resetCanvas","disconnect","off","preventDefault","darkTheme","createTheme","palette","createClient","codec","createMicrophoneAndCameraTracks","Join","loading","setUsername","setUid","formSubmit","setFormSubmit","setError","errorMessage","setErrorMessage","useParams","generateUsername","uuidv4","generateRandomName","ThemeProvider","CssBaseline","transform","justifyItems","htmlFor","OutlinedInput","inputProps","maxLength","endAdornment","InputAdornment","edge","Shuffle","FormHelperText","LoadingButton","get","encodeURIComponent","roomData","chat","getToken","endIcon","Start","loadingPosition","App","path","exact","element","to","initState","languages_loading","languages","output","codeReducer","action","filter","history_loading","REACT_APP_AGORA_ID","rtcReducer","chat_history_loading","chatReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aad9b74c.chunk.js","sourcesContent":["const ACTIONS = {\n    JOIN: 'join',\n    JOINED: 'joined',\n    DISCONNECTED: 'disconnected',\n    CODE_CHANGE: 'code-change',\n    LANGUAGE_CHANGE: 'language-change',\n    UPDATE_LANGUAGE: 'language-update',\n    INPUT_CHANGE: 'input-change',\n    UPDATE_INPUT: 'input-update',\n    LEAVE: 'leave',\n    SEND_MESSAGE: 'send-message',\n    RECEIVE_MESSAGE: 'receive-message',\n    OUTPUT_CHANGE: 'output-change',\n    ROOM_MEMBERS: 'room-members',\n};\n\nmodule.exports = ACTIONS;","export const UPDATE_LANGUAGE = 'ide/update_langugae';\nexport const UPDATE_CODE = 'ide/update_code';\nexport const UPDATE_STDIN = 'ide/update_stdin';\nexport const REQUEST_EXECUTION = 'ide/request_execution';\nexport const UPDATE_RUN = 'ide/update_run';\nexport const CODE_HISTORY_LOADING = 'ide/code_history_loading';\nexport const FETCH_CODE_HISTORY = 'ide/fetch_code_history';\nexport const CODE_SET_CLIENTS = 'ide/set_clients';\nexport const CODE_REMOVE_CLIENT = 'ide/remove_client';\n\n\nexport const GET_RTC_TOKEN_LOADING = 'rtc/get_token_loading';\nexport const GET_RTC_TOKEN = 'rtc/get_token';\nexport const START_RTC = 'rtc/start_rtc';\nexport const TOGGLE_MIC = 'rtc/toggle_mic';\nexport const TOGGLE_CAMERA = 'rtc/toggle_camera';\nexport const ADD_USER = 'rtc/add_user';\nexport const REMOVE_USER = 'rtc/remove_user';\n\n\nexport const ADD_NEW_MESSAGE = 'chat/add_new_message';\nexport const UPDATE_ROOM_USERS = 'chat/update_room_users';\nexport const COMPOSE_MESSAGE = 'chat/compose_message';\nexport const FETCH_CHAT_HISTORY = 'chat/fetch_chat_history';\nexport const CHAT_HISTORY_LOADING = 'chat/history_loading';","export default __webpack_public_path__ + \"static/media/vscode.a61dc62c.png\";","import React, { useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Box,\n  Toolbar,\n  List,\n  Paper,\n  Typography,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  Drawer,\n  Divider,\n  IconButton,\n  Tabs,\n  Tab,\n  Grid,\n  Stack,\n  Switch,\n  Button,\n  Badge,\n  CircularProgress,\n} from \"@mui/material\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport {\n  Code,\n  Videocam,\n  Gesture,\n  Chat,\n  People,\n  Mic,\n} from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TOGGLE_CAMERA, TOGGLE_MIC } from \"../../store/actions/types\";\nimport \"./index.css\";\nimport codeLogo from \"../../assets/vscode.png\";\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 1 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst ChatDrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0),\n  // // necessary for content to be below app bar\n  // ...theme.mixins.toolbar,\n  zIndex: theme.zIndex.Toolbar + 1,\n  justifyContent: \"flex-start\",\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n}));\n\nconst MiniDrawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme }) => ({\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n\n  ...closedMixin(theme),\n  \"& .MuiDrawer-paper\": closedMixin(theme),\n}));\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: 0,\n    }),\n  })\n);\n\nconst CenterLoadingSpinner = () => {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Grid item xs={3}>\n        <CircularProgress />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst drawerWidth = 360;\n\nconst CodeAppBar = () => {\n  return (\n    <AppBar position=\"fixed\" open={false}>\n      <Toolbar>\n        <img\n          width={32}\n          style={{ marginRight: \"8px\" }}\n          class=\"logo-container\"\n          src={codeLogo}\n          alt=\"Logo\"\n        />\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ display: { xs: \"none\", sm: \"block\" } }}\n        >\n          Code\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst LeftDrawer = ({\n  tracks,\n  chatDrawerOpen,\n  chatDrawerTab,\n  setTabValue,\n  setChatDrawerTab,\n  setChatDrawerOpen,\n}) => {\n  const dispatch = useDispatch();\n  const { trackState } = useSelector((state) => state.RTC);\n  const { users } = useSelector((state) => state.CHAT);\n\n  const handleChatClickToggle = () => {\n    if (chatDrawerOpen) {\n      if (chatDrawerTab === 0) setChatDrawerOpen(false);\n      else setChatDrawerTab(0);\n    } else {\n      setChatDrawerTab(0);\n      setChatDrawerOpen(true);\n    }\n  };\n\n  const handlePeopleClickToggle = () => {\n    if (chatDrawerOpen) {\n      if (chatDrawerTab === 1) setChatDrawerOpen(false);\n      else setChatDrawerTab(1);\n    } else {\n      setChatDrawerTab(1);\n      setChatDrawerOpen(true);\n    }\n  };\n\n  const mute = async (type) => {\n    if (type === \"audio\") {\n      await tracks[0].setEnabled(!trackState.audio);\n      dispatch({\n        type: TOGGLE_MIC,\n      });\n    } else if (type === \"video\") {\n      await tracks[1].setEnabled(!trackState.video);\n      dispatch({\n        type: TOGGLE_CAMERA,\n      });\n    }\n  };\n\n  return (\n    <MiniDrawer variant=\"permanent\" open={false}>\n      <DrawerHeader />\n\n      <List>\n        <ListItem\n          onClick={() => setTabValue(0)}\n          disablePadding\n          sx={{ display: \"block\" }}\n        >\n          <ListItemButton\n            sx={{\n              minHeight: 48,\n              justifyContent: \"center\",\n              px: 2.5,\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: 0,\n                mr: \"auto\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Code />\n            </ListItemIcon>\n          </ListItemButton>\n        </ListItem>\n\n        <ListItem\n          onClick={() => setTabValue(1)}\n          disablePadding\n          sx={{ display: \"block\" }}\n        >\n          <ListItemButton\n            sx={{\n              minHeight: 48,\n              justifyContent: \"center\",\n              px: 2.5,\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: 0,\n                mr: \"auto\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Gesture />\n            </ListItemIcon>\n          </ListItemButton>\n        </ListItem>\n        <ListItem\n          onClick={() => setTabValue(2)}\n          disablePadding\n          sx={{ display: \"block\" }}\n        >\n          <ListItemButton\n            sx={{\n              minHeight: 48,\n              justifyContent: \"center\",\n              px: 2.5,\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: 0,\n                mr: \"auto\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Videocam />\n            </ListItemIcon>\n          </ListItemButton>\n        </ListItem>\n        <ListItem\n          onClick={() => handleChatClickToggle()}\n          disablePadding\n          sx={{ display: \"block\" }}\n        >\n          <ListItemButton\n            sx={{\n              minHeight: 48,\n              justifyContent: \"center\",\n              px: 2.5,\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: 0,\n                mr: \"auto\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Chat />\n            </ListItemIcon>\n          </ListItemButton>\n        </ListItem>\n        <ListItem\n          onClick={() => handlePeopleClickToggle()}\n          disablePadding\n          sx={{ display: \"block\" }}\n        >\n          <ListItemButton\n            sx={{\n              minHeight: 48,\n              justifyContent: \"center\",\n              px: 2.5,\n            }}\n          >\n            <ListItemIcon\n              sx={{\n                minWidth: 0,\n                mr: \"auto\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Badge badgeContent={users.length} color=\"primary\">\n                <People />\n              </Badge>\n            </ListItemIcon>\n          </ListItemButton>\n        </ListItem>\n\n        {/* <ListItem\n          disablePadding\n          \n        > */}\n        <Stack\n          sx={{ bottom: 0, position: \"fixed\", overflow: \"hidden\" }}\n          direction=\"column\"\n          spacing={0}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Mic />\n          <Switch\n            checked={trackState.audio}\n            onChange={() => mute(\"audio\")}\n            name=\"audio\"\n          />\n        </Stack>\n        {/* </ListItem> */}\n        {/* <ListItem\n          disablePadding\n          sx={{ bottom: 72, position: \"fixed\", overflow: \"hidden\" }}\n        > */}\n        <Stack\n          sx={{ bottom: 72, position: \"fixed\", overflow: \"hidden\" }}\n          direction=\"column\"\n          spacing={0}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Videocam />\n          <Switch\n            checked={trackState.video}\n            onChange={() => mute(\"video\")}\n            name=\"video\"\n          />\n        </Stack>\n        {/* </ListItem> */}\n      </List>\n    </MiniDrawer>\n  );\n};\n\nexport {\n  drawerWidth,\n  CenterLoadingSpinner,\n  TabPanel,\n  closedMixin,\n  MiniDrawer,\n  DrawerHeader,\n  ChatDrawerHeader,\n  AppBar,\n  Main,\n  LeftDrawer,\n  CodeAppBar,\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UPDATE_CODE } from \"../../store/actions/types\";\nimport ACTIONS from \"../../utils/actions\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/python/python\";\nimport \"codemirror/mode/go/go\";\nimport \"codemirror/mode/swift/swift\";\nimport \"codemirror/mode/php/php\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/addon/runmode/runmode\";\n\nimport \"./index.css\";\n\nconst Editor = ({ socketRef }) => {\n  const IDE = useSelector((state) => state.IDE);\n  const { roomId } = useSelector((state) => state.RTC);\n  const dispatch = useDispatch();\n \n  const getThemeForLanguage = () => {\n    switch (IDE.language) {\n      case \"cpp\":\n        return \"clike\";\n      case \"c\":\n        return \"clike\";\n      case \"java\":\n        return \"clike\";\n      case \"go\":\n        return \"go\";\n      case \"swift\":\n        return \"swift\";\n      case \"php\":\n        return \"php\";\n      default:\n        return \"javascript\";\n    }\n  };\n\n  return (\n    <CodeMirror\n      value={IDE.code}\n      options={{\n        mode: { name: getThemeForLanguage()},\n        theme: \"dracula\",\n        keyMap: \"sublime\",\n        showHint: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true,\n        lineWrapping: true,\n        indentWithTabs: true\n      }}\n      onBeforeChange={(editor, data, value) => {\n        console.log(\"before\", data.origin, value);\n        if ([\"+input\", \"+delete\", \"cut\", \"paste\", \"undo\", \"redo\"].includes(data.origin)) {\n          dispatch({ type: UPDATE_CODE, payload: value });\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code: value,\n          });\n        }\n      }}\n      onChange={(editor, data, value) => {\n        //console.log(\"on\", data.origin, value);\n      }}\n    />\n  );\n};\n\nexport default Editor;\n","\n\nconst getBaseURL = () => {\n    let url = process.env.REACT_APP_API_URL;\n    return url;\n}\n\nexport {\n    getBaseURL\n}\n","import socketIOClient from \"socket.io-client\";\nimport { getBaseURL } from './utils';\n\nconst backendUrl = getBaseURL();\nlet socketIoInstance;\n\nexport const getsocketIoInstance = (roomName, userName, componentName = '') => {\n    if (socketIoInstance == null) {\n        socketIoInstance = socketIOClient(backendUrl);\n        socketIoInstance.emit('join-room', { roomName, userName });\n        // console.log('new socketio instance created', componentName);\n    }\n    return socketIoInstance;\n}\n\n\n// socket initialization\nexport const initSocket = async() => {\n    const options = {\n        'force new connection': true,\n        reconnectionAttempt: 'Infinity',\n        timeout: 10000,\n        transports: ['websocket']\n    };\n    console.log('initSocket backendUrl', backendUrl)\n    return socketIOClient(backendUrl, options);\n};","import axios from \"axios\";\nimport { getBaseURL } from \"../utils/utils.js\";\nconst url = getBaseURL()\nconst instance = axios.create({\n    baseURL: url,\n  });\n \nexport default instance\n  ","import React, { useEffect, useState, useRef } from \"react\";\nimport ACTIONS from \"../../utils/actions\";\nimport Editor from \"../Editor\";\nimport { initSocket } from \"../../utils/socketio-client\";\nimport Split from \"react-split\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\nimport { Fab, Paper, Grid } from \"@mui/material\";\nimport { PlayArrow, Cached } from \"@mui/icons-material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { UPDATE_STDIN, UPDATE_LANGUAGE } from \"../../store/actions/types\";\nimport { executeCode } from \"../../store/actions/codeActions\";\nimport { Box, InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport \"./style.css\";\n\nconst Code = ({ socketRef }) => {\n  const IDE = useSelector((state) => state.IDE);\n  const { roomId } = useSelector((state) => state.RTC);\n  const dispatch = useDispatch();\n\n  const handleLanguageChange = (event) => {\n    const language = event.target.value;\n    dispatch({ type: UPDATE_LANGUAGE, payload: language });\n    socketRef.current.emit(ACTIONS.LANGUAGE_CHANGE, {\n      roomId,\n      language,\n    });\n  };\n\n  const handleStdInChange = (event) => {\n    const input = event.target.value;\n    dispatch({ type: UPDATE_STDIN, payload: input });\n    socketRef.current.emit(ACTIONS.INPUT_CHANGE, {\n      roomId,\n      input,\n    });\n  };\n\n  const handleCodeExecutionRequest = (e) => {\n    dispatch(executeCode(IDE.code, IDE.language, IDE.stdin));\n  };\n\n  const textAreaStyle = {\n    color: \"white\",\n    width: \"100%\",\n    background: \"#0000002e\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    boxShadow: \"none\",\n    outline: \"none\",\n    padding: \"10px\",\n  };\n\n  return (\n    <>\n      <Paper sx={{ height: \"100%\", overflow: \"hidden\" }}>\n        <Split className=\"split\" sizes={[70, 30]}>\n          <Box>\n            <Editor socketRef={socketRef} />\n          </Box>\n\n          <Stack sx={{ p: 2 }} spacing={2}>\n            <FormControl variant=\"standard\">\n              <InputLabel id=\"lang-select-label\">Language</InputLabel>\n              <Select\n                variant=\"filled\"\n                labelId=\"lang-select-label\"\n                id=\"lang-select\"\n                value={IDE.language}\n                label=\"Language\"\n                onChange={handleLanguageChange}\n              >\n                <MenuItem value={\"c++\"}>C++</MenuItem>\n                <MenuItem value={\"java\"}>Java</MenuItem>\n                <MenuItem value={\"python\"}>Python</MenuItem>\n                <MenuItem value={\"javascript\"}>JavaScript</MenuItem>\n                <MenuItem value={\"go\"}>Go</MenuItem>\n                <MenuItem value={\"c\"}>C</MenuItem>\n                <MenuItem value={\"php\"}>PHP</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl variant=\"standard\">\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                Input\n              </Typography>\n              <TextareaAutosize\n                data-gramm=\"false\"\n                style={textAreaStyle}\n                minRows={13}\n                maxRows={15}\n                value={IDE.stdin}\n                onChange={(e) => handleStdInChange(e)}\n              />\n            </FormControl>\n            <FormControl variant=\"standard\">\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                Output\n              </Typography>\n              <TextareaAutosize\n                onClick={() => {\n                  toast.info(\"Output is read only\", {\n                    position: toast.POSITION.BOTTOM_RIGHT,\n                    autoClose: 1000,\n                  });\n                }}\n                style={textAreaStyle}\n                readOnly\n                minRows={13}\n                maxRows={15}\n                value={\n                  IDE.run.stderr +\n                  (IDE.run.signal ? IDE.run.signal : \"\") +\n                  IDE.run.stdout\n                }\n              />\n            </FormControl>\n          </Stack>\n        </Split>\n\n        <Fab\n          disabled={IDE.is_executing}\n          style={{\n            margin: 0,\n            top: \"auto\",\n            right: 20,\n            bottom: 20,\n            left: \"auto\",\n            position: \"fixed\",\n            zIndex: 12,\n          }}\n          onClick={() => {\n            handleCodeExecutionRequest();\n          }}\n        >\n          {IDE.is_executing ? <Cached /> : <PlayArrow />}\n        </Fab>\n      </Paper>\n    </>\n  );\n};\n\nexport default Code;\n","import axios from \"../../api\";\nimport { toast } from \"react-toastify\";\nimport {\n  REQUEST_EXECUTION,\n  UPDATE_RUN,\n  FETCH_CODE_HISTORY,\n  CODE_HISTORY_LOADING,\n} from \"./types\";\n\nexport const executeCode = (code, language, stdin) => async (dispatch) => {\n  console.log(\"executeCode\");\n  dispatch({\n    type: REQUEST_EXECUTION,\n  });\n  var res = { data: [] };\n  try {\n    res = await axios.post(\"/code/execute\", {\n      code,\n      language,\n      stdin,\n    });\n    await dispatch({\n      type: UPDATE_RUN,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(\"executeCode error\", error);\n    toast.error(error.message, {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n  }\n};\n\nexport const fetchCodeHistory = (roomId) => async (dispatch) => {\n  console.log(\"fetchCodeHistory\");\n  dispatch({\n    type: CODE_HISTORY_LOADING,\n  });\n  try {\n    const { data } = await axios.get(`/code/history/${roomId}`);\n    console.log(\"fetchCodeHistory\", data);\n    await dispatch({\n      type: FETCH_CODE_HISTORY,\n      payload: {\n        language: data.language,\n        code: data.code,\n      },\n    });\n  } catch (error) {\n    console.log(\"fetchCodeHistory error\", error);\n    toast.error(error.message, {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n  }\n};\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport { CirclePicker } from \"react-color\";\nimport {\n  Paper,\n  Stack,\n  Slider,\n  Grid,\n  ToggleButton,\n  ToggleButtonGroup,\n  IconButton,\n  Tooltip,\n} from \"@mui/material\";\nimport {\n  AutoFixNormal,\n  Edit,\n  Redo,\n  Undo,\n  ClearAll,\n  Brush,\n} from \"@mui/icons-material\";\n\nimport \"./style.css\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Whiteboard({ socketRef, canvasRef, paths, setPaths }) {\n  const { uid, roomId } = useSelector((state) => state.RTC);\n  const [strokeColor, setStrokeColor] = useState(\"#000000\");\n  const [strokeSize, setStrokeSize] = useState(4);\n  const [strokeMode, setStrokeMode] = useState(\"draw\");\n\n  const [canvasProps, setCanvasProps] = useState({\n    className: \"react-sketch-canvas\",\n    width: \"100%\",\n    height: \"75vh\",\n    canvasColor: \"#FFFFFF\",\n    style: { border: \"1px solid #CCC\", borderRadius: \"0.25rem\" },\n    allowOnlyPointerType: \"all\",\n  });\n\n  //const canvasRef = useRef(null);\n  // const [paths, setPaths] = useState([]);\n  const [lastStroke, setLastStroke] = useState({\n    stroke: null,\n    isEraser: null,\n  });\n\n  useEffect(()=>{\n    socketRef.current.emit(\"join-drawing\", {\n      name: uid,\n      drawingId: roomId,\n      color: \"#000000\",\n    });\n  },[])\n\n  useEffect(() => {\n    const eraseMode = canvasRef.current?.eraseMode;\n    if (strokeMode === \"draw\") eraseMode(false);\n    else eraseMode(true);\n  }, [strokeMode, canvasRef]);\n\n  const handleStrokeColorChange = (color, event) => {\n    setStrokeColor(color.hex);\n  };\n\n  const handleStrokeModeChange = (event, newMode) => {\n    setStrokeMode(newMode);\n  };\n\n  const clearHandler = () => {\n    const clearCanvas = canvasRef.current?.clearCanvas;\n\n    if (clearCanvas) {\n      socketRef.current?.emit(\"input-control\", {\n        type: \"clear\",\n        drawingId: roomId,\n      });\n      socketRef.current?.emit(\"update-canvas\", {\n        drawingId: roomId,\n        msg: [],\n      });\n      clearCanvas();\n    }\n  };\n\n  const onChange = (updatedPaths) => {\n    if (updatedPaths.length) {\n      socketRef.current?.emit(\"update-canvas\", {\n        drawingId: roomId,\n        msg: updatedPaths,\n      });\n    }\n    setPaths(updatedPaths);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <ReactSketchCanvas\n            defaultValue={paths}\n            ref={canvasRef}\n            onChange={onChange}\n            onStroke={(stroke, isEraser) => {\n              setLastStroke({ stroke, isEraser });\n              socketRef.current.emit(\"input-canvas\", {\n                drawingId: roomId,\n                msg: stroke,\n              });\n            }}\n            strokeColor={strokeColor}\n            strokeWidth={strokeSize}\n            eraserWidth={strokeSize}\n            {...canvasProps}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container p={2}>\n        <Grid item xs={2}>\n          <ToggleButtonGroup\n            color=\"primary\"\n            value={strokeMode}\n            exclusive\n            onChange={handleStrokeModeChange}\n            aria-label=\"Mode\"\n          >\n            <ToggleButton value=\"draw\">\n              <Edit />\n              Draw\n            </ToggleButton>\n            <ToggleButton value=\"erase\">\n              <AutoFixNormal />\n              Erase\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n        <Grid item xs={3}>\n          <Stack direction=\"row\" spacing={1}>\n            <Tooltip title=\"Stroke size\">\n              <IconButton>\n                <Brush />\n              </IconButton>\n            </Tooltip>\n            <Slider\n              size=\"small\"\n              defaultValue={strokeSize}\n              onChange={(e) => setStrokeSize(e.target.value)}\n              min={1}\n              max={100}\n              valueLabelDisplay=\"auto\"\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={2}>\n          <Stack direction=\"row\" spacing={2}>\n            <Tooltip title=\"Clear All\">\n              <IconButton onClick={() => clearHandler()}>\n                <ClearAll />\n              </IconButton>\n            </Tooltip>\n          </Stack>\n        </Grid>\n\n        <Grid item xs={3}>\n          <CirclePicker\n            colors={[\n              \"#f44336\",\n              \"#ff9800\",\n              \"#9c27b0\",\n              \"#3f51b5\",\n              \"#009688\",\n              \"#000000\",\n            ]}\n            onChange={handleStrokeColorChange}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Box, Stack, Grid, Typography, CircularProgress } from \"@mui/material\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CenterLoadingSpinner } from \"../RoomComponents\";\nimport { AgoraVideoPlayer } from \"agora-rtc-react\";\nimport NewWindow from 'react-new-window'\nimport \"./index.css\";\n\nconst Meet = ({tracks}) => {\n  const [opened, setOpened] = useState(false);\n  const { start, users } = useSelector((state) => state.RTC);\n  return (\n    <>\n    \n      {start ? (\n        <Box sx={{ display: \"flex\" }}>\n          <>\n            <div id=\"videos\">\n              <AgoraVideoPlayer\n                style={{ height: \"95%\", width: \"95%\" }}\n                className=\"vid\"\n                videoTrack={tracks[1]}\n              />\n              {users.length > 0 &&\n                users.map((user) => {\n                  if (user.videoTrack) {\n                    return (\n                      <AgoraVideoPlayer\n                        style={{ height: \"95%\", width: \"95%\" }}\n                        className=\"vid\"\n                        videoTrack={user.videoTrack}\n                        key={user.uid}\n                      />\n                    );\n                  } else return null;\n                })}\n            </div>\n          </>\n        </Box>\n      ) : (\n        <CenterLoadingSpinner />\n      )}\n      {/*\n      <Button\n        onClick={() => {\n          setOpened((prev) => {\n            return !prev;\n          });\n        }}\n      >\n        {opened ? \"Close\" : \"Open \"}\n      </Button>\n      \n      {opened && (\n        <NewWindow\n          onUnload={() => this.newWindowUnloaded()}\n          features={{ left: 200, top: 200, width: 400, height: 400 }}\n        >\n          {start ? (\n        <Box sx={{ display: \"flex\" }}>\n          <>\n            <div id=\"videos\">\n              <AgoraVideoPlayer\n                style={{ height: \"95%\", width: \"95%\" }}\n                className=\"vid\"\n                videoTrack={tracks[1]}\n              />\n              {users.length > 0 &&\n                users.map((user) => {\n                  if (user.videoTrack) {\n                    return (\n                      <AgoraVideoPlayer\n                        style={{ height: \"95%\", width: \"95%\" }}\n                        className=\"vid\"\n                        videoTrack={user.videoTrack}\n                        key={user.uid}\n                      />\n                    );\n                  } else return null;\n                })}\n            </div>\n          </>\n        </Box>\n      ) : (\n        <CenterLoadingSpinner />\n      )}\n        </NewWindow>\n      )} */}\n    </>\n  );\n};\n\nexport default Meet;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Stack, Toolbar, Box, TextField, Button, Grid } from \"@mui/material\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport { Send } from \"@mui/icons-material\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport \"./styles.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COMPOSE_MESSAGE } from \"../../store/actions/types\";\n\nfunction Chat({ sendMessage }) {\n  const dispatch = useDispatch();\n  const { username } = useSelector((state) => state.RTC);\n  const { message, messages } = useSelector((state) => state.CHAT);\n  return (\n    <Box>\n      <>\n        <div className=\"chat-window\">\n          <div className=\"chat-body\">\n            <ScrollToBottom className=\"message-container\">\n              {messages &&\n                messages.length > 0 &&\n                messages.map((messageContent) => {\n                  return (\n                    <div\n                      className=\"message\"\n                      id={username === messageContent.user ? \"other\" : \"you\"}\n                    >\n                      <div>\n                        <div className=\"message-content\">\n                          <p>{messageContent.text}</p>\n                        </div>\n                        <div className=\"message-meta\">\n                          <p id=\"author\">{messageContent.user}</p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n            </ScrollToBottom>\n          </div>\n          <Box\n            className=\"chat-footer\"\n            sx={{ width: \"340px\", position: \"fixed\", bottom: 50 }}\n          >\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              value={message}\n              onKeyPress={(event) =>\n                event.key === \"Enter\" ? sendMessage(event) : null\n              }\n              onChange={(event) => {\n                dispatch({\n                  type: COMPOSE_MESSAGE,\n                  payload: event.target.value,\n                });\n              }}\n              placeholder=\"Message\"\n            />\n          </Box>\n        </div>\n      </>\n    </Box>\n  );\n}\n\nexport default Chat;\n","import * as React from \"react\";\nimport {\n  List,\n  ListItem,\n  Divider,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Typography,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Users() {\n  const { users } = useSelector((state) => state.CHAT);\n\n  const toTitleCase = (str) => {\n    return str.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n\n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = \"#\";\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n    return color;\n  }\n\n  function stringAvatar(name) {\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n        color: '#ffffff'\n      },\n      children: `${toTitleCase(name[0])}`,\n    };\n  }\n\n  return (\n    // <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\n    //   <ListItem alignItems=\"flex-start\">\n    //     <ListItemAvatar>\n    //       <Avatar alt=\"Remy Sharp\" src=\"https://i.pravatar.cc/300?u=1\" />\n    //     </ListItemAvatar>\n    //     <ListItemText\n    //       primary=\"Emerson Mclean\"\n    //       secondary={<React.Fragment>{\"Admin\"}</React.Fragment>}\n    //     />\n    //   </ListItem>\n    // </List>\n\n    <>\n      <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n        <ListItem key=\"count\" alignItems=\"flex-start\">\n          <Typography variant=\"h6\" component=\"div\" >\n            {users.length + ` Participant${users.length > 1 ? \"s\" : \"\"}`}{\" \"}\n          </Typography>\n        </ListItem>\n        {users.map((e, i) => (\n          <ListItem key={i} alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar alt={e.user} {...stringAvatar(e.user)} />\n            </ListItemAvatar>\n\n            <ListItemText\n              sx={{ pt: 1.2 }}\n              primary={toTitleCase(e.user)}\n              secondary={null}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Paper,\n  Drawer,\n  Divider,\n  IconButton,\n  Tabs,\n  Tab,\n  Grid,\n  Button,\n} from \"@mui/material\";\nimport {\n  drawerWidth,\n  TabPanel,\n  LeftDrawer,\n  ChatDrawerHeader,\n  Main,\n  CenterLoadingSpinner,\n  CodeAppBar,\n} from \"./RoomComponents\";\nimport { AgoraVideoPlayer } from \"agora-rtc-react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\nimport CodeComponent from \"./Code\";\nimport Whiteboard from \"./Whiteboard\";\nimport Meet from \"./Meet\";\nimport Chat from \"./Chat\";\nimport Users from \"./Users\";\n\nconst RoomWorkArea = ({\n  socketRef,\n  canvasRef,\n  paths,\n  setPaths,\n  tracks,\n  tabValue,\n  setTabValue,\n  chatDrawerOpen,\n  setChatDrawerOpen,\n  chatDrawerTab,\n  setChatDrawerTab,\n  sendMessage,\n}) => {\n  const theme = useTheme();\n\n  const handleChatDrawerTabChange = (event, newValue) => {\n    setChatDrawerTab(newValue);\n  };\n\n  return (\n    <Paper>\n      <Box sx={{ display: \"flex\" }}>\n        <CodeAppBar />\n        <LeftDrawer\n          tracks={tracks}\n          chatDrawerOpen={chatDrawerOpen}\n          chatDrawerTab={chatDrawerTab}\n          setTabValue={setTabValue}\n          setChatDrawerTab={setChatDrawerTab}\n          setChatDrawerOpen={setChatDrawerOpen}\n        />\n        <Main open={chatDrawerOpen} sx={{ flexGrow: 1 }}>\n          <TabPanel value={tabValue} index={0}>\n            <CodeComponent socketRef={socketRef} />\n          </TabPanel>\n          <TabPanel value={tabValue} index={1}>\n            <Whiteboard\n            paths={paths}\n            setPaths={setPaths} \n            socketRef={socketRef}\n            canvasRef={canvasRef} />\n          </TabPanel>\n          <TabPanel value={tabValue} index={2}>\n            <Meet tracks={tracks} />\n          </TabPanel>\n        </Main>\n        <Drawer\n          style={{ visibility: chatDrawerOpen ? \"visible\" : \"hidden\" }}\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={chatDrawerOpen}\n        >\n          <ChatDrawerHeader>\n            <IconButton onClick={() => setChatDrawerOpen(false)}>\n              {theme.direction === \"rtl\" ? <ChevronLeft /> : <ChevronRight />}\n            </IconButton>\n            <Tabs\n              value={chatDrawerTab}\n              onChange={handleChatDrawerTabChange}\n              aria-label=\"basic tabs example\"\n            >\n              <Tab label=\"Chat\" />\n              <Tab label=\"Users\" />\n            </Tabs>\n          </ChatDrawerHeader>\n          <Divider />\n          <>\n            <TabPanel value={chatDrawerTab} index={0}>\n              <Chat sendMessage={sendMessage} />\n            </TabPanel>\n            <TabPanel value={chatDrawerTab} index={1}>\n              <Users />\n            </TabPanel>\n          </>\n        </Drawer>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default RoomWorkArea;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport {\n  Box,\n  Drawer,\n  Tabs,\n  Divider,\n  IconButton,\n  Tab,\n  AppBar,\n} from \"@mui/material\";\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\nimport RoomWorkArea from \"./RoomWorkArea\";\nimport {\n  ADD_NEW_MESSAGE,\n  ADD_USER,\n  CODE_REMOVE_CLIENT,\n  CODE_SET_CLIENTS,\n  COMPOSE_MESSAGE,\n  REMOVE_USER,\n  START_RTC,\n  UPDATE_CODE,\n  UPDATE_ROOM_USERS,\n  UPDATE_LANGUAGE,\n  UPDATE_STDIN,\n} from \"../store/actions/types\";\nimport { initSocket } from \"../utils/socketio-client\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ACTIONS, { UPDATE_INPUT } from \"../utils/actions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst drawerWidth = 320;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: 0,\n    }),\n  })\n);\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-start\",\n}));\n\nexport default function RoomLayout({\n  useClient,\n  useMicrophoneAndCameraTracks,\n}) {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(1);\n  const [tabValue, setTabValue] = useState(0);\n  const [chatDrawerOpen, setChatDrawerOpen] = useState(false);\n  const [chatDrawerTab, setChatDrawerTab] = React.useState(1);\n  const socketRef = useRef(null);\n  const {\n    appId,\n    username,\n    rtcToken,\n    uid,\n    roomId: channelName,\n  } = useSelector((state) => state.RTC);\n  const { message } = useSelector((state) => state.CHAT);\n  const IDE = useSelector((state) => state.IDE);\n  const client = useClient();\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\n\n  // scribble\n\n  const [paths, setPaths] = useState([]);\n  const canvasRef = useRef();\n\n  // scribble\n\n  useEffect(() => {\n    let init = async (name) => {\n      client.on(\"user-published\", async (user, mediaType) => {\n        await client.subscribe(user, mediaType);\n        console.log(\"subscribe success\");\n        if (mediaType === \"video\") {\n          dispatch({ type: ADD_USER, payload: user });\n        }\n        if (mediaType === \"audio\") {\n          user.audioTrack?.play();\n        }\n      });\n\n      client.on(\"user-unpublished\", (user, type) => {\n        console.log(\"unpublished\", user, type);\n        if (type === \"audio\") {\n          user.audioTrack?.stop();\n        }\n        if (type === \"video\") {\n          dispatch({ type: REMOVE_USER, payload: user.uid });\n        }\n      });\n\n      client.on(\"user-left\", (user) => {\n        console.log(\"leaving\", user);\n        dispatch({ type: REMOVE_USER, payload: user.uid });\n      });\n\n      await client.join(appId, name, rtcToken, uid);\n      if (tracks) {\n        await client.publish([tracks[0], tracks[1]]);\n        dispatch({\n          type: START_RTC,\n        });\n        await tracks[0].setEnabled(false);\n        await tracks[1].setEnabled(false);\n      }\n    };\n\n    if (ready && tracks) {\n      init(channelName);\n    }\n  }, [channelName, client, ready, tracks]);\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function handleErrors(e) {\n    console.log(\"socket error\", e);\n    toast.error(\"Socket connection failed, try again later.\");\n  }\n\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n      socketRef.current.on(\"connect_error\", (err) => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", (err) => handleErrors(err));\n\n      socketRef.current.on(ACTIONS.RECEIVE_MESSAGE, (message) => {\n        dispatch({\n          type: ADD_NEW_MESSAGE,\n          payload: message,\n        });\n      });\n\n      socketRef.current.on(ACTIONS.ROOM_MEMBERS, (usersList) => {\n        dispatch({\n          type: UPDATE_ROOM_USERS,\n          payload: usersList,\n        });\n      });\n\n      socketRef.current.emit(\n        \"join\",\n        { user: username, room: channelName },\n        (err) => {\n          if (err) {\n            console.log(\"err\", err);\n          }\n        }\n      );\n      // message send to server, event emit\n      socketRef.current.emit(ACTIONS.JOIN, {\n        // join event\n        roomId: channelName, // useParams - link param\n        username: uid,\n      });\n\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n        if (code !== null) {\n          //editorRef.current.setValue(code);\n          dispatch({ type: UPDATE_CODE, payload: code });\n        }\n      });\n\n      socketRef.current.on(ACTIONS.UPDATE_LANGUAGE, ({ language }) => {\n        dispatch({ type: UPDATE_LANGUAGE, payload: language });\n        toast.info(`Language changed to ${language}`, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n        });\n      });\n\n      socketRef.current.on(ACTIONS.UPDATE_INPUT, ({ input }) => {\n        dispatch({ type: UPDATE_STDIN, payload: input });\n      });\n\n      socketRef.current.on(\n        ACTIONS.JOINED,\n        ({ clients, username, socketId }) => {\n          dispatch({\n            type: CODE_SET_CLIENTS,\n            payload: clients,\n          });\n        }\n      );\n\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\n        dispatch({\n          type: CODE_REMOVE_CLIENT,\n          payload: socketId,\n        });\n      });\n\n      socketRef.current.emit(\"join-drawing\", {\n        name: uid,\n        drawingId: channelName,\n        color: \"#000000\",\n      });\n\n      socketRef.current.on(\"update-canvas\", (updatedPath) => {\n        const newPath = [updatedPath, ...paths];\n        canvasRef.current?.loadPaths(newPath);\n        setPaths(newPath);\n      });\n\n      socketRef.current.on(\"joined-drawing\", ({ drawing, users }) => {\n        canvasRef.current?.loadPaths(drawing);\n        setPaths(drawing);\n      });\n\n      socketRef.current.on(\"update-control\", (updatedControl) => {\n        switch (updatedControl) {\n          case \"undo\":\n            const undo = canvasRef.current?.undo;\n            if (undo) {\n              undo();\n            }\n            break;\n          case \"redo\":\n            const redo = canvasRef.current?.redo;\n            if (redo) {\n              redo();\n            }\n            break;\n          case \"clear\":\n            const clearCanvas = canvasRef.current?.clearCanvas;\n            if (clearCanvas) {\n              clearCanvas();\n            }\n            break;\n          case \"reset\":\n            const resetCanvas = canvasRef.current?.resetCanvas;\n            if (resetCanvas) {\n              resetCanvas();\n            }\n            break;\n          default:\n            break;\n        }\n      });\n    };\n\n    init();\n\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (message.length !== 0)\n      socketRef.current.emit(ACTIONS.SEND_MESSAGE, message, () => {\n        dispatch({\n          type: COMPOSE_MESSAGE,\n          payload: \"\",\n        });\n      });\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", background: \"#1e1e1e\" }}>\n      <Main open={open}>\n        <DrawerHeader />\n        <RoomWorkArea\n          socketRef={socketRef}\n          canvasRef={canvasRef}\n          paths={paths}\n          setPaths={setPaths}\n          tracks={tracks}\n          tabValue={tabValue}\n          setTabValue={setTabValue}\n          chatDrawerOpen={chatDrawerOpen}\n          setChatDrawerOpen={setChatDrawerOpen}\n          chatDrawerTab={chatDrawerTab}\n          setChatDrawerTab={setChatDrawerTab}\n          sendMessage={sendMessage}\n        />\n      </Main>\n\n      <Drawer\n        style={{ visibility: open ? \"visible\" : \"hidden\" }}\n        sx={{\n          pt: 2,\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n          <Tabs value={value} onChange={handleChange} aria-label=\"drawer tabs\">\n            <Tab label=\"Chat\" />\n            <Tab label=\"Users\" />\n          </Tabs>\n        </DrawerHeader>\n        <Divider />\n      </Drawer>\n\n      <ToastContainer theme=\"dark\" />\n    </Box>\n  );\n}\n","import axios from \"../../api\";\nimport { CHAT_HISTORY_LOADING, FETCH_CHAT_HISTORY, GET_RTC_TOKEN, GET_RTC_TOKEN_LOADING, UPDATE_CODE, UPDATE_LANGUAGE, UPDATE_STDIN } from \"./types\";\nimport { toast } from \"react-toastify\";\n\nexport const getToken = (roomId, username, uid) => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_RTC_TOKEN_LOADING,\n    });\n    const { data } = await axios.get(\n      `/call/rtc/${roomId}/publisher/uid/${encodeURIComponent(uid)}`\n    );\n    console.log('data', data)\n    dispatch({\n      type: GET_RTC_TOKEN,\n      payload: { rtcToken: data.rtcToken, roomId, uid, username},\n    });\n    dispatch({ type: UPDATE_CODE, payload: data.roomData.code });\n    dispatch({ type: UPDATE_STDIN, payload: data.roomData.stdin });\n    dispatch({ type: UPDATE_LANGUAGE, payload: data.roomData.language });\n    dispatch({ type: FETCH_CHAT_HISTORY, payload: data.roomData.chat });\n  } catch (error) {\n    console.log(\"error\", error);\n    toast.error(error.message, {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  CssBaseline,\n  Paper,\n  Typography,\n  Stack,\n  IconButton,\n  InputAdornment,\n  Tooltip,\n  OutlinedInput,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useParams } from \"react-router-dom\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport RoomLayout from \"../RoomLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getToken } from \"../../store/actions/rtcActions\";\nimport { Start, Shuffle } from \"@mui/icons-material\";\nimport { generateRandomName } from \"randimal\";\nimport { ToastContainer } from \"react-toastify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createClient, createMicrophoneAndCameraTracks } from \"agora-rtc-react\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nconst useClient = createClient({\n  mode: \"rtc\",\n  codec: \"vp8\",\n});\nconst useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\n\nconst Join = () => {\n  const dispatch = useDispatch();\n  const { rtcToken, loading } = useSelector((state) => state.RTC);\n  const [username, setUsername] = useState(\"\");\n  const [uid, setUid] = useState(\"\");\n  const [formSubmit, setFormSubmit] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { roomId } = useParams();\n\n  useEffect(() => {\n    generateUsername();\n    setUid(uuidv4());\n  }, []);\n\n  useEffect(() => {\n    if (formSubmit) {\n      if (username.length === 0) {\n        setError(true);\n        setErrorMessage(\"Name is required\");\n      } else {\n        setError(false);\n        setErrorMessage(\"\");\n      }\n    }\n  }, [formSubmit, username]);\n\n  const generateUsername = async () => {\n    const name = await generateRandomName();\n    setUsername(name);\n  };\n\n  const handleNameInput = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handleJoin = () => {\n    setFormSubmit(true);\n    if (!error && username.length) {\n      dispatch(getToken(roomId, username, uid));\n    }\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <>\n        {!rtcToken.length ? (\n          <>\n            <Paper\n              sx={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                boxShadow: 24,\n                minWidth: \"40%\",\n                p: 3,\n              }}\n            >\n              <Stack spacing={2} justifyItems=\"center\">\n                <Typography variant=\"overline\" component=\"h2\">\n                  What's your name?\n                </Typography>\n\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"name-join-room\">Name</InputLabel>\n                  <OutlinedInput\n                    value={username}\n                    onChange={handleNameInput}\n                    error={error}\n                    id=\"name\"\n                    label=\"Name\"\n                    inputProps={{ maxLength: 28 }}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <Tooltip title=\"Generate Username\">\n                          <IconButton\n                            aria-label=\"generate name\"\n                            onClick={generateUsername}\n                            edge=\"end\"\n                          >\n                            <Shuffle />\n                          </IconButton>\n                        </Tooltip>\n                      </InputAdornment>\n                    }\n                  />\n                  <FormHelperText error={error} id=\"name-error\">\n                    {errorMessage}\n                  </FormHelperText>\n                </FormControl>\n\n                <LoadingButton\n                  onClick={handleJoin}\n                  endIcon={<Start />}\n                  loading={loading}\n                  loadingPosition=\"end\"\n                  variant=\"contained\"\n                >\n                  Join\n                </LoadingButton>\n              </Stack>\n            </Paper>\n\n            <ToastContainer theme='dark'/>\n          </>\n        ) : (\n          <>\n            <RoomLayout\n              useClient={useClient}\n              useMicrophoneAndCameraTracks={useMicrophoneAndCameraTracks}\n            />\n          </>\n        )}\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default Join;\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./style.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Join from \"../Join\";\nimport { getsocketIoInstance } from \"../../utils/socketio-client\";\n\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function App() {\n  useEffect(() => {});\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        exact\n        element={<Navigate to={`/${uuidv4()}`} replace />}\n      />\n      <Route path=\"/:roomId\" element={<Join />} />\n    </Routes>\n  );\n}\n","import _ from \"lodash\";\nimport {\n  UPDATE_LANGUAGE,\n  UPDATE_CODE,\n  UPDATE_STDIN,\n  UPDATE_RUN,\n  REQUEST_EXECUTION,\n  CODE_REMOVE_CLIENT,\n  CODE_SET_CLIENTS,\n  CODE_HISTORY_LOADING,\n  FETCH_CODE_HISTORY\n} from \"../actions/types\";\n\nconst initState = {\n  languages_loading: false,\n  languages: [],\n  language: \"python\",\n  code: ``,\n  stdin: ``,\n  is_executing: false,\n  clients: [],\n  run: {\n    stdout: \"\",\n    stderr: \"\",\n    code: 0,\n    signal: null,\n    output: \"\",\n  },\n};\n\nconst codeReducer = (state = initState, action) => {\n  switch (action.type) {\n    case UPDATE_CODE:\n      return {\n        ...state,\n        code: action.payload,\n      };\n    case UPDATE_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload,\n      };\n    case UPDATE_STDIN:\n      return {\n        ...state,\n        stdin: action.payload,\n      };\n    case UPDATE_RUN:\n      return {\n        ...state,\n        is_executing: false,\n        run: action.payload,\n      };\n    case REQUEST_EXECUTION:\n      return {\n        ...state,\n        is_executing: true,\n      };\n    case CODE_SET_CLIENTS:\n      return {\n        ...state,\n        clients: action.payload,\n      };\n    case CODE_REMOVE_CLIENT:\n      return {\n        ...state,\n        clients: state.clients.filter(\n          (client) => client.socketId !== action.payload\n        ),\n      };\n      case CODE_HISTORY_LOADING:\n        return {\n          ...state,\n          history_loading: true,\n        };\n      case FETCH_CODE_HISTORY:\n        return {\n          ...state,\n          history_loading: false,\n          code: action.payload.code,\n          language: action.payload.language,\n        };\n    default:\n      return state;\n  }\n};\nexport default codeReducer;\n","import {\n  GET_RTC_TOKEN,\n  GET_RTC_TOKEN_LOADING,\n  START_RTC,\n  ADD_USER,\n  REMOVE_USER,\n  TOGGLE_CAMERA,\n  TOGGLE_MIC,\n} from \"../actions/types\";\n\nconst initState = {\n  loading: false,\n  rtcToken: \"\",\n  uid: \"\",\n  username: \"\",\n  roomId: \"\",\n  start: false,\n  appId: process.env.REACT_APP_AGORA_ID,\n  users: [],\n  trackState: { video: false, audio: false },\n};\n\nconst rtcReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_RTC_TOKEN_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_USER:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n    case REMOVE_USER:\n      return {\n        ...state,\n        users: state.users.filter((user) => user.uid !== action.payload),\n      };\n    case START_RTC:\n      return {\n        ...state,\n        start: true,\n      };\n    case TOGGLE_CAMERA:\n      return {\n        ...state,\n        trackState: { ...state.trackState, video: !state.trackState.video },\n      };\n    case TOGGLE_MIC:\n      return {\n        ...state,\n        trackState: { ...state.trackState, audio: !state.trackState.audio },\n      };\n\n    case GET_RTC_TOKEN:\n      return {\n        ...state,\n        loading: false,\n        rtcToken: action.payload.rtcToken,\n        uid: action.payload.uid,\n        roomId: action.payload.roomId,\n        username: action.payload.username,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default rtcReducer;\n","import _ from \"lodash\";\nimport {\n  CHAT_HISTORY_LOADING,\n  FETCH_CHAT_HISTORY,\n  ADD_NEW_MESSAGE,\n  COMPOSE_MESSAGE,\n  UPDATE_ROOM_USERS,\n} from \"../actions/types\";\n\nconst initState = {\n  chat_history_loading: false,\n  messages: [],\n  message: \"\",\n  users: [],\n};\n\nconst chatReducer = (state = initState, action) => {\n  switch (action.type) {\n    case CHAT_HISTORY_LOADING:\n      return {\n        ...state,\n        chat_history_loading: true,\n      };\n    case FETCH_CHAT_HISTORY:\n      return {\n        ...state,\n        chat_history_loading: false,\n        messages: action.payload,\n      };\n    case ADD_NEW_MESSAGE:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n    case UPDATE_ROOM_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case COMPOSE_MESSAGE:\n      return {\n        ...state,\n        message: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default chatReducer;\n","import { combineReducers } from \"redux\";\nimport codeReducer from \"./codeReducer\";\nimport rtcReducer from \"./rtcReducer\";\nimport chatReducer from \"./chatReducers\";\n\nexport default combineReducers({\n  IDE: codeReducer,\n  RTC: rtcReducer,\n  CHAT: chatReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"../store/reducers\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}